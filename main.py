from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

import config

import youtube_dl

bot = Bot(token=config.token)
dp = Dispatcher(bot)



import sqlite3

def savetodb(chat_id, link):
    db = sqlite3.connect('server.db')
    sql = db.cursor()
    # sql.execute("""CREATE TABLE IF NOT EXISTS users (
    # user_id TEXT,
    # link TEXT
    # )""")
    # db.commit()


    # test_id = input("Enter user id for put them in database: ")
    # test_link = input('Enter link for put them in database: ')


    #sql.execute(f"INSERT INTO users VALUES ('{test_id}, {test_link}')")
    sql.execute(f"INSERT INTO log(chat_id, link) VALUES (?,?)",(chat_id,link))

    db.commit()

    # for value in sql.execute("SELECT * FROM log"):
    #     print (value)



import os, fnmatch
def findallmp3(pattern, path):
    result = []
    for root, dirs, files in os.walk(path):
        for name in files:
            if fnmatch.fnmatch(name, pattern):
                result.append(os.path.join(name))
    return result


def findourmp3(video_id):
    current_folder = os.getcwd()
    songs = findallmp3('*.mp3', current_folder)
    i = 0

    elements = len(songs)
    # print("–ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞: " + str(elements))
    while i < elements:
        index = songs[i].find(video_id)

        if index < 0:
            pass
        #print (songs[i] + ' –ù–µ –Ω–∞–π–¥–µ–Ω–æ'  + 'index = ' + str(index))
        else:

            return songs[i]
        # print (songs[i]+ ' –ù–∞–π–¥–µ–Ω–æ '+ 'index = ' + str(index))

        i += 1
# def getmp3name():
#     import glob, os
#     current_folder = os.getcwd()
#     os.chdir(current_folder)
#     for file in glob.glob("*.mp3"):
#         print(file)
#         return file
def download_mp3(link):
    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '320',
        }],
    }

    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            ydl.download([link])
    except:
        pass


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    hello = "–ü—Ä–∏–≤–µ—Ç —é–∑–µ—Ä.ü§ó \n –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º—É–∑—ã–∫–∏ –∏–∑ Youtube. \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ —é—Ç—É–± —Ä–æ–ª–∏–∫ –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –±–æ—Ç –≤–µ—Ä–Ω–µ—Ç –≤–∞–º mp3 —Ñ–∞–π–ª —Å –≤–∞—à–µ–π –ø–µ—Å–Ω–µ–π.üòé"
    hello2 = '\n–ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –µ–≥–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º. —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–µ –±–æ–ª—å—à–µ 50–º–±, —á–µ–≥–æ –±–æ–ª–µ–µ —á–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ª—é–±–æ–π –ø–µ—Å–Ω–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.üòå'
    await message.reply(hello + hello2)


@dp.message_handler()
async def echo_message(msg: types.Message):
    try:
        await bot.send_message(msg.from_user.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –±–æ—Ç —Å–∫–∞—á–∞–µ—Ç –ø–µ—Å–Ω—é —Å —é—Ç—É–±–∞, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–Ω –ø—Ä–∏—à–ª–µ—Ç –µ–µ –≤–∞–º.")
        download_link = msg.text
        index = download_link.find("&")
        if index >= 0:
            get_link = download_link.split("&")
            download_mp3(get_link[0])
            index2 = get_link[0].split("=")
            video_id = index2[1]
            #print(video_id)
        else:
            download_mp3(download_link)

            if msg.text.find("list")>0:
                index2 = download_link[0].split("=")
                video_id = index2[1]
                #print('video id: ' + video_id + "\ndownload link: " + download_link[0])
                #print(video_id)
            elif msg.text.find('watch?v=')>0:
                index2 = msg.text.split('=')
                video_id = index2[1]
                #print('video id: ' + video_id+"\ndownload link: " + download_link[0])
            elif msg.text.find('youtu.be')>0:
                index2 = download_link.split("/")
                video_id = index2[3]

                #print(video_id)

        #song = getmp3name()

        oursong = findourmp3(video_id)

        await bot.send_audio(msg.from_user.id, open(oursong, 'rb'), "–í–æ—Ç –≤–∞—à–∞ –ø–µ—Å–Ω—è üòä")
        #print("–ö–æ–ª-–≤–æ –ø–µ—Å–µ–Ω –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ: " + str(len(song))  +  "    " + str(song))
        os.remove(oursong)
        savetodb(msg.from_user.id, msg.text)
    except:
        await bot.send_message(msg.from_user.id, "–ß—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò≠\n–í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É –ª–∏–±–æ –æ–±—ä–µ–º —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 50 –º–µ–≥–∞–±–∞–π—Ç.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")





if __name__ == '__main__':
    executor.start_polling(dp)